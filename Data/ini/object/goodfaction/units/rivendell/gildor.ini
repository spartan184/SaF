; ;------------------------------------------------------------------------------
; ;
; ;	Gildor.ini
; ;
; ;------------------------------------------------------------------------------
; Object RivendellGildor

	; ; *** ART Parameters ***
	; Scale = .97
	; SelectPortrait		= HPrivgildor
	; ButtonImage		= HIrivgildor
	
	; DescriptionStrategic = CONTROLBAR:LW_ToolTip_Haldir

	; Draw = W3DScriptedModelDraw ModuleTag_DRAW
	
		; StaticModelLODMode = yes
		
		; OkToChangeModelColor = Yes
		
		; DefaultModelConditionState
			; Model					= augildor_skn
			; Skeleton				= EUGlrfdl_SKL
		; End
		; ModelConditionState			= PACKING_TYPE_1
			; Model					= augildor_pwr
			; Skeleton				= EUGlrfdl_SKL
			; ;ParticleSysBone = BAT_SPINE1 BladeOfPurity FollowBone:Yes
		; End
		
		
		; IdleAnimationState
			; Animation				= IDLB
				; AnimationName		= EUGlrfdl_IDLB
				; AnimationMode		= ONCE
			; End
			; Animation				= IDLC
				; AnimationName		= EUGlrfdl_IDLC
				; AnimationMode		= ONCE
			; End
			; Animation				= IDLD
				; AnimationName		= EUGlrfdl_IDLD
				; AnimationMode		= ONCE
			; End
			; Animation				= IDLE
				; AnimationName		= EUGlrfdl_IDLE
				; AnimationMode		= ONCE
			; End
			; StateName				= Idle
			; BeginScript
				; CurDrawableHideSubObject("spear")
				; Prev = CurDrawablePrevAnimationState()
				; if Prev == "Selected" then CurDrawableSetTransitionAnimState("TRANS_Selected_To_Idle") end
			; EndScript
		; End
		
		; AnimationState			= PACKING_TYPE_1
			; Animation
				; AnimationName   = euglrfdl_chra
				; AnimationMode   = ONCE
			; End
			; FXEvent	= Frame:30 Name: FX_GildorLanternFlare
		; End
		
		; TransitionState				=	TRANS_MountedSelect
			; Animation				=	ATNA
				; AnimationName		=	RUHHs_Theo_ATNA
				; AnimationMode		=	ONCE
			; End
		; End
		; AnimationState				=	MOUNTED FREEFALL 
			; Animation				=	freefall
				; AnimationName		=	RUHHs_Theo_FLYC
				; AnimationMode		=	LOOP
			; End
			; Flags					=	RANDOMSTART
		; End
		; AnimationState				=	MOUNTED STUNNED_FLAILING 
			; Animation				=	JustDie
				; AnimationName		=	RUHHs_Theo_FLYA
				; AnimationMode		=	LOOP
				; AnimationSpeedFactorRange	= 0.2 0.3
			; End
			; Flags					=	RANDOMSTART
		; End
		; AnimationState				=	MOUNTED DYING SPLATTED
			; Animation				=	Land
				; AnimationName		=	RUHHs_Theo_LNDA
				; AnimationMode		=	ONCE
			; End
		; End
		; AnimationState				=	MOUNTED DYING
			; Animation				=	DieA
				; AnimationName		=	RUHHs_Theo_DIEA
				; AnimationMode		=	ONCE
			; End
		; End
		; AnimationState				=	MOUNTED STUNNED_STANDING_UP
			; Animation				=	StandUp
				; AnimationName		=	RUHHs_Theo_GTPA
				; AnimationMode		=	ONCE
				; AnimationSpeedFactorRange = 1.3 1.3
			; End
		; End
		; AnimationState				=	MOUNTED STUNNED
			; Animation				=	Land
				; AnimationName		=	RUHHs_Theo_LNDA
				; AnimationMode		=	ONCE
			; End
		; End
		; AnimationState						= PARALYZED MOUNTED
			; Animation
				; AnimationName				= RUHHs_Theo_IDLA
				; AnimationMode				= LOOP
			; End
		; End
		; AnimationState        = MOUNTED MOVING FIRING_OR_PREATTACK_A
			; ShareAnimation		= Yes
			; Animation           = MountedRunAndFire
				; AnimationName       = RUHHs_Theo_ATRB
				; AnimationMode       = LOOP
			; End
			; Flags               = RANDOMSTART  
		; End
		; AnimationState				=	MOUNTED FIRING_OR_PREATTACK_A
			; Animation				=	AttackA
				; AnimationName		=	RUHHs_Theo_ATKA
				; AnimationMode		=	LOOP
				; UseWeaponTiming		=	Yes
			; End
			; Animation				=	AttackB
				; AnimationName		=	RUHHs_Theo_ATKB
				; AnimationMode		=	LOOP
				; UseWeaponTiming		=	Yes
			; End
		; End
		; AnimationState				=	MOUNTED TURN_LEFT_HIGH_SPEED
			; Animation				=	TurnLeft
				; AnimationName		=	RUHHs_Theo_TNL1
				; AnimationMode		=	LOOP
			; End
		; End
		; AnimationState				=	MOUNTED TURN_RIGHT_HIGH_SPEED
			; Animation				=	TurnRight
				; AnimationName		=	RUHHs_Theo_TNR1
				; AnimationMode		=	LOOP
			; End
		; End
		; AnimationState				=	MOUNTED MOVING ACCELERATE
			; Animation				=	Accelerate
				; AnimationName		=	RUHHs_Theo_ACCL
				; AnimationMode		=	LOOP
			; End
		; End
		; AnimationState				=	MOUNTED MOVING DECELERATE
			; Animation				=	Decelerate
				; AnimationName		=	RUHHs_Theo_DECL
				; AnimationMode		=	ONCE
				; AnimationSpeedFactorRange = 0.6 0.6	
			; End
		; End
		; AnimationState				=	MOUNTED TURN_LEFT 
			; Animation				=	TurnLeft
				; AnimationName		=	RUHHs_Theo_TRNL
				; AnimationMode		=	LOOP
			; End
		; End
		; AnimationState				=	MOUNTED TURN_RIGHT 
			; Animation				=	TurnRight
				; AnimationName		=	RUHHs_Theo_TRNR
				; AnimationMode		=	LOOP
			; End
		; End
		; AnimationState				=	MOUNTED MOVING WALKING
			; Animation				=	Walk
				; AnimationName		=	RUHHs_Theo_WLKA
				; AnimationMode		=	LOOP
			; End
			; Flags					=	RANDOMSTART
		; End
		; AnimationState				=	MOUNTED MOVING BACKING_UP
			; Animation				=	BackingUp
				; AnimationName		=	RUHHs_Theo_BAKA
				; AnimationMode		=	LOOP
			; End
			; Flags					=	RANDOMSTART
		; End
		; AnimationState				=	MOUNTED MOVING
			; Animation				=	RunA
				; AnimationName		=	RUHHs_Theo_RUNA
				; AnimationMode		=	LOOP
			; End
 			; Flags					=	RANDOMSTART
		; End
		; AnimationState = MOUNTED USER_1
			; Animation
				; AnimationName				= EUGlrfnMnt_SPCA
				; AnimationMode				= ONCE
				; AnimationSpeedFactorRange	= 0.7 0.7
			; End
		; End
		; AnimationState = MOUNTED USER_2 
			; Animation
				; AnimationName				= EUGlrfnMnt_SPCB
				; AnimationMode				= ONCE
				; AnimationSpeedFactorRange	= 0.8 0.8
			; End
		; End
		; AnimationState				=	RAISING_FLAG MOUNTED
				; Animation           =	CHRA
					; AnimationName   =	RUHHs_Theo_CHRA
					; AnimationMode   =	LOOP
				; End
		; End
		; AnimationState				=	MOUNTED SELECTED
			; SimilarRestart			=   Yes			
			; StateName				=	AtAttentionIdle
			; Animation				=	ATNB
				; AnimationName		=	RUHHs_Theo_IDLH
				; AnimationMode		=	LOOP
			; End
			; BeginScript
				; Prev = CurDrawablePrevAnimationState()
				; if Prev == "Idle" then CurDrawableSetTransitionAnimState("TRANS_MountedSelect") end
			; EndScript
		; End
		; TransitionState				=	TRANS_MountedSelect
			; Animation				=	ATNA
				; AnimationName		=	RUHHs_Theo_ATNA
				; AnimationMode		=	ONCE
			; End
		; End
		; AnimationState				= MOUNTED LEVELED
			; Animation				= LevelUp
				; AnimationName		= RUHHs_Theo_CHRA
				; AnimationMode		= ONCE
			; End
		; End
		; AnimationState = MOUNTED
			; StateName = Idle
			; Animation				=	IdleA
				; AnimationName		=	RUHHs_Theo_IDLA
				; AnimationPriority	=	30
				; AnimationMode		=	ONCE
				; AnimationBlendTime	=	15
			; End			
			; Animation	=	IDLB
				; AnimationName		=	RUHHs_Theo_IDLB
				; AnimationPriority	=	15
				; AnimationMode		=	ONCE
				; AnimationBlendTime	=	30
			; End
			; Animation	=	IDLC
				; AnimationName		=	RUHHs_Theo_IDLC
				; AnimationPriority	=	15
				; AnimationMode		=	ONCE
				; AnimationBlendTime	=	30
			; End
			; Flags					=	RANDOMSTART RESTART_ANIM_WHEN_COMPLETE
		; End
		; AnimationState			= STUNNED_FLAILING 
			; Flags               = RANDOMSTART
			; Animation
				; AnimationName   = EUGlrfdl_FLYA
				; AnimationMode   = LOOP
				; AnimationSpeedFactorRange	= 0.4 0.6
			; End
			; StateName           = NoSword
			; BeginScript
				; Prev = CurDrawablePrevAnimationState()
				; if Prev == "Sword" then CurDrawableSetTransitionAnimState("TRANS_SheatheSword") end
			; EndScript
		; End
		; AnimationState			= STUNNED_STANDING_UP
			; Animation
				; AnimationName   = EUGlrfdl_GTPA
				; AnimationMode   = ONCE
				; AnimationSpeedFactorRange= 1.5 1.5
			; End
		; End
		; AnimationState			= STUNNED 
			; Animation
				; AnimationName   = EUGlrfdl_LNDA
				; AnimationMode   = ONCE
			; End
			; StateName           = NoSword
			; BeginScript
				; Prev = CurDrawablePrevAnimationState()
				; if Prev == "Sword" then CurDrawableSetTransitionAnimState("TRANS_SheatheSword") end
			; EndScript
		; End
		; AnimationState				=	DYING SPLATTED
			; Animation
				; AnimationName		=	EUGlrfdl_LNDA
				; AnimationMode		=	ONCE
			; End
			; StateName				=	NoSword
			; BeginScript
				; Prev = CurDrawablePrevAnimationState()
				; if Prev == "Sword" then CurDrawableSetTransitionAnimState("TRANS_SheatheSword") end
			; EndScript
		; End
		; AnimationState        = DYING AFLAME
			; Animation = DieAflame
				; AnimationName           = EUGlrfdl_MFDA
				; AnimationMode       = LOOP
			; End
		; End
		; AnimationState				=	DYING
			; Animation
				; AnimationName		=	EUGlrfdl_DTHA
				; AnimationMode		=	ONCE
				; AnimationPriority   =   10
			; End
		; End
		; AnimationState						= PARALYZED
			; Animation
				; AnimationName				= EUGlrfdl_IDLB
				; AnimationMode				= LOOP
			; End
		; End
		; AnimationState        = MOVING FIRING_OR_PREATTACK_A
			; ShareAnimation		= Yes
			; Animation           = RunAndFire
				; AnimationName       = EUGlrfdl_ATKSV2
				; AnimationMode       = LOOP
			; End
			; Flags               = RANDOMSTART 
			; BeginScript
				; CurDrawableHideSubObject("spear")
			; EndScript
		; End
		; AnimationState				=	MOVING ATTACKING
			; Flags					=	RANDOMSTART
			; Animation				=	RUNB
				; AnimationName		=	EUGlrfdl_RUNB
				; AnimationMode		=	LOOP
			; End
			; StateName				=	NoSword
			; BeginScript
				; CurDrawableHideSubObject("spear")
				; Prev = CurDrawablePrevAnimationState()
				; if Prev == "Sword" then CurDrawableSetTransitionAnimState("TRANS_SheatheSword") end
			; EndScript
		; End
		; AnimationState				=	MOVING
			; Flags					=	RANDOMSTART
			; Animation				=	RUNA
				; AnimationName		=	EUGlrfdl_RUNA
				; AnimationMode		=	LOOP
			; End
			; StateName				=	NoSword
			; BeginScript
				; CurDrawableHideSubObject("spear")
				; Prev = CurDrawablePrevAnimationState()
				; if Prev == "Sword" then CurDrawableSetTransitionAnimState("TRANS_SheatheSword") end
			; EndScript
		; End
		; AnimationState = USER_1
			; Animation
				; AnimationName				= EUGlrfdl_SPCA
				; AnimationMode				= ONCE
				; AnimationSpeedFactorRange	= 0.75 0.75
			; End
		; End
		; AnimationState = USER_2
			; Animation
				; AnimationName				= EUGlrfdl_SPCB
				; AnimationMode				= ONCE
				; AnimationSpeedFactorRange	= 0.8 0.8
			; End
		; End
		; AnimationState				=	FIRING_OR_PREATTACK_A
			; StateName				=	Sword
			; Animation				=	ATKA
				; AnimationName		=	EUGlrfdl_ATKA
				; AnimationMode		=	ONCE
				; UseWeaponTiming		=	Yes
			; End
			; Animation				=	ATKB
				; AnimationName		=	EUGlrfdl_ATKB
				; AnimationMode		=	ONCE
				; UseWeaponTiming		=	Yes
			; End
			; Animation				=	ATKC
				; AnimationName		=	EUGlrfdl_ATKC
				; AnimationMode		=	ONCE
				; UseWeaponTiming		=	Yes
			; End
			; Flags					=	RESTART_ANIM_WHEN_COMPLETE
			; BeginScript
				; CurDrawableHideSubObject("spear")
			; EndScript
		; End
		; AnimationState        = ATTACKING
			; Animation           = ALERT_1
				; AnimationName     = EUGlrfdl_IDLA
				; AnimationMode     = ONCE
			; End
			; Flags               = RESTART_ANIM_WHEN_COMPLETE
		; End
		; AnimationState			= HIT_REACTION HIT_LEVEL_1
			; StateName			= STATE_Bored_Sword
			; Animation			= Hit_Level_1_A
				; AnimationName	= EUGlrfdl_HITA
				; AnimationMode	= ONCE
			; End
		; End
		; AnimationState			= HIT_REACTION HIT_LEVEL_2
			; StateName			= STATE_Bored_Sword
			; Animation			= Hit_Level_1_A
				; AnimationName	= EUGlrfdl_HITA
				; AnimationMode	= ONCE
			; End
		; End
		; AnimationState			= HIT_REACTION HIT_LEVEL_3
			; StateName			= STATE_Bored_Sword
			; Animation			= Hit_Level_1_A
				; AnimationName	= EUGlrfdl_HITA
				; AnimationMode	= ONCE
			; End
		; End
		; TransitionState					=	TRANS_Idle_to_Selected
			; Animation					=	ATNA
				; AnimationName			=	EUGlrfdl_ATNA
				; AnimationMode			=	ONCE
			; End
		; End
		; TransitionState					=	TRANS_Selected_To_Idle
			; Animation					=	ATNC
				; AnimationName			=	EUGlrfdl_ATNC
				; AnimationMode			=	ONCE
			; End
		; End
		; AnimationState						= LEVELED
			; Animation						= LevelUp
				; AnimationName				= EUGlrfdl_LVLA
				; AnimationMode				= ONCE
				; AnimationSpeedFactorRange	= 0.75 0.75
			; End
		; End
		; AnimationState				=	RAISING_FLAG
			; Animation				=	CHRA
				; AnimationName		=	EUGlrfdl_CHRA
				; AnimationMode		=	LOOP
			; End
		; End
		; AnimationState				=	SELECTED
			; StateName				=	Selected
			; SimilarRestart			=   Yes			
			; Animation				=	ATNB
				; AnimationName		=	EUGlrfdl_ATNB
				; AnimationMode		=	LOOP
			; End
			; BeginScript
				; CurDrawableHideSubObject("spear")
				; Prev = CurDrawablePrevAnimationState()
				; if Prev == "Idle" then CurDrawableSetTransitionAnimState("TRANS_Idle_to_Selected") end
			; EndScript
		; End
		; AnimationState				=	EMOTION_CELEBRATING
			; Animation				=	CHRA
				; AnimationName		=	EUGlrfdl_CHRA
				; AnimationMode		=	ONCE
				; AnimationPriority	=	10
			; End
			; Flags					=	RESTART_ANIM_WHEN_COMPLETE				
		; End
		; AnimationState					= EMOTION_TAUNTING
			; Animation
				; AnimationName			= EUGlrfdl_TNTA
				; AnimationMode			= LOOP
			; End
		; End
		; AnimationState					= EMOTION_ALERT EMOTION_MORALE_HIGH
			; Animation					= Taunting
				; AnimationName			= EUGlrfdl_TNTA
				; AnimationMode			= ONCE
			; End
			; Flags						= RANDOMSTART RESTART_ANIM_WHEN_COMPLETE
		; End
		; AnimationState        = EMOTION_ALERT
			; Animation           = ALERT_1
				; AnimationName     = EUGlrfdl_IDLA
				; AnimationMode     = ONCE
			; End
			; Flags               = RESTART_ANIM_WHEN_COMPLETE
		; End	
	; End
	; Draw = W3DScriptedModelDraw DustEffects
	    ; DefaultModelConditionState
	      ; Model = None
	    ; End
	    ; IdleAnimationState
	    ; End
	    ; AnimationState = MOUNTED MOVING WADING
			; ParticleSysBone = None FootstepSlash
	    ; End
	    ; AnimationState = MOUNTED MOVING ACCELERATE
			; ParticleSysBone = None GenericSiegeTrailDust
	    ; End
	    ; AnimationState = MOUNTED MOVING ACCELERATE
			; ParticleSysBone = None GenericSiegeTrailDust
	    ; End
	    ; AnimationState = MOUNTED MOVING
	    ; End
	; End
	
    ; #include "..\..\..\includes\StunDrawModuleSmall.inc"

	; ; ***DESIGN parameters ***
	; Side						= Rivendell
	; EditorSorting				= UNIT
	; ThreatLevel					= HALDIR_THREAT_LEVEL
	; ThingClass					= CHARACTER_UNIT
	; BuildCost					= 1100 ;HALDIR_BUILDCOST
	; BuildTime					= HERO_BUILDTIME_TIER_1 ;;,;; HALDIR_BUILDTIME
	; ShockwaveResistance = SHOCKWAVE_RESISTANCE_STRONG
	; TransportSlotCount			= TRANSPORTSLOTCOUNT_HERO
	; VisionRange					= VISION_HERO_STANDARD
	; ShroudClearingRange			= SHROUD_CLEAR_RANGED_HERO
	
	; MaxVisionBonusPercent = 300%
	; VisionBonusTestRadius = 200
	; VisionBonusPercentPerFoot = 1.0%
	
	; BountyValue					= ELVEN_HALDIR_BOUNTY_VALUE
	; RecruitText 					= CONTROLBAR:GildorRecruit
	; ReviveText					= CONTROLBAR:GildorRevive
	; Hotkey		= CONTROLBAR:GildorHotkey
	; DisplayName					= OBJECT:Gildor
	; CrushableLevel				= 2  ;What am I?:        0 = for infantry, 1 = for trees, 2 = general vehicles
	; CommandSet					= GildorCommandSet
	; CommandPoints				= 0 ;HERO_COMMAND_POINTS_TIER_2 ;;,;; 50
	; ;//DisplayMeleeDamage			= HALDIR_SWORD_DAMAGE
	; ;//DisplayRangedDamage			= HALDIR_BOW_DAMAGE
	; HeroSortOrder				= 40

	; WeaponSet
		; Conditions		= WEAPONSET_HERO_MODE
		; Weapon			= PRIMARY    HaldirHeroSword
	; End

	; WeaponSet
		; Conditions				= None
		; Weapon					= PRIMARY GildorSword
		; AutoChooseSources		= PRIMARY FROM_PLAYER FROM_SCRIPT FROM_AI
	; End
	
	; ArmorSet
		; Conditions				= None
		; Armor					= HeroArmor ;;,;; ToughHeroArmor ;;.;; HeroLightArmor
		; DamageFX				= NormalDamageFX
	; End

	; ; *** AUTO RESOLVE DATA *** 
	; AutoResolveUnitType = AutoResolveUnit_Hero
	; AutoResolveCombatChain = AutoResolve_HeroCombatChain

	; AutoResolveBody = AutoResolve_HaldirBody

	; AutoResolveArmor
		; Armor = AutoResolve_HaldirArmor
	; End

	; AutoResolveWeapon
		; Weapon = AutoResolve_NormalHeroModerateWeapon
	; End

	; AutoResolveLeadership = AutoResolve_GildorBonus


	; ; *** AUDIO Parameters ***
 
	; VoiceAttack 							= GildorVoiceAttack
	; VoiceAttackAir							= GildorVoiceAttack
	; VoiceAttackCharge 						= GildorVoiceAttackCharge
	; VoiceAttackMachine 						= GildorVoiceAttack
	; VoiceAttackStructure 					= GildorVoiceAttackBuilding
	; VoiceFear								= GildorVoiceHelpMe
	; VoiceGuard								= GildorVoiceMove
	; VoiceMove 								= GildorVoiceMove
	; VoiceMoveToCamp 						= GildorVoiceMoveCamp
	; VoiceMoveWhileAttacking 				= GildorVoiceDisengage
	; VoicePriority							= 62
	; VoiceRetreatToCastle 					= GildorVoiceRetreat
	; VoiceSelect 							= GildorVoiceSelectMS
	; VoiceSelectBattle  						= GildorVoiceSelectBattle

	; SoundImpact								= ImpactHorse

	; UnitSpecificSounds
		; VoiceEnterUnitElvenTransportShip	= GildorVoiceGarrison
		; VoiceGarrison						= GildorVoiceGarrison
		; VoiceInitiateCaptureBuilding		= GildorVoiceMove			; From SpecialPower SpecialAbilityCaptureBuilding
	; End

	; CrowdResponseKey = ElfHero

    ; #include "..\..\..\includes\StandardUnitEvaEvents.inc"
	; EvaEventDieOwner						= RivendellGildorDie

	; Behavior = LargeGroupAudioUpdate ModuleTag_LGAU
		; Key	= Humanoid_Male Elf Elf_Male Unit Infantry Hero
	; End

	; ClientBehavior = AnimationSoundClientBehavior ModuleTag_AnimAudioBehavior
		; MaxUpdateRangeCap = 800
		; AnimationSound = Sound:BodyFallSoldier			Animation:EUGLRFDL_SKL.EUGLRFDL_LNDA		Frames:5
		; AnimationSound = Sound:BodyFallSoldier			Animation:EUGLRFDL_SKL.EUGLRFDL_DTHA		Frames:34
		; AnimationSound = Sound:FootstepDirtA			Animation:EUGlrfdl_SKL.EUGlrfdl_RUNA		Frames:9 18 28 38 48 58
		; AnimationSound = Sound:FootstepDirtA			Animation:EUGlrfdl_SKL.EUGlrfdl_RUNB		Frames:9 18 28 38 48 58
		; AnimationSound = Sound:HorseMoveFootsteps		Animation:RUHHs_Theo_SKL.RUHHs_Theo_ACCL	Frames:16 
		; AnimationSound = Sound:HorseMoveFootsteps		Animation:RUHHs_Theo_SKL.RUHHs_Theo_RUNA	Frames:8
		; AnimationSound = Sound:HorseMoveFootsteps		Animation:RUHHs_Theo_SKL.RUHHs_Theo_TNL1	Frames:8
		; AnimationSound = Sound:HorseMoveFootsteps		Animation:RUHHs_Theo_SKL.RUHHs_Theo_TNR1	Frames:8
		; AnimationSound = Sound:HorseWhinny			Animation:RUHHs_Theo_SKL.RUHHs_Theo_IDLC	Frames:3
		; AnimationSound = Sound:HorseDieForHero			Animation:RUHHs_Theo_SKL.RUHHs_Theo_LNDA	Frames:0
		; AnimationSound = Sound:BodyFallSoldier			Animation:RUHHs_Theo_SKL.RUHHs_Theo_LNDA	Frames:2 10
		; AnimationSound = Sound:HorseDieForHero			Animation:RUHHs_Theo_SKL.RUHHs_Theo_DIEA	Frames:0
		; AnimationSound = Sound:BodyFallGenericNoArmor	Animation:RUHHs_Theo_SKL.RUHHs_Theo_DIEA	Frames:6
		; AnimationSound = Sound:BodyFallSoldier			Animation:RUHHs_Theo_SKL.RUHHs_Theo_DIEA	Frames:45
	; End

	; ;------------------------------------------

	; #include "..\..\..\includes\DefaultInvisibilityUpdate.inc"

	; Behavior = HitReactionBehavior HitReactionBehaviorModuleTag
		; HitReactionLifeTimer1				= 1500
		; HitReactionThreshold1				= 400
		; FastHitsResetReaction				= Yes
	; End
	
	; ; *** ENGINEERING Parameters ***

	; RadarPriority							= UNIT
	; KindOf									= HERO PRELOAD SELECTABLE CAN_CAST_REFLECTIONS INFANTRY PATH_THROUGH_EACH_OTHER SCORE THROWN_OBJECT ARMY_SUMMARY ATTACK_NEEDS_LINE_OF_SIGHT HEAVY_MELEE_HITTER
	; CamouflageDetectionMultiplier			= CAMOUFLAGE_DETECTION_DISTANCE_MEDIUM
	; PathfindDiameter						= 40.0


	; Body = RespawnBody ModuleTag_RespawnBody
		; CheerRadius							= EMOTION_CHEER_RADIUS
		; MaxHealth							= 2000 ;HALDIR_HEALTH
		; PermanentlyKilledByFilter			= NONE
		; DodgePercent						= HERO_DODGE_PERCENT
	; End
	
	; Behavior = RespawnUpdate ModuleTag_RespawnUpdate
		; DeathAnim							= DYING
		; DeathFX								= FX_GildorDieToRespawn
		; DeathAnimationTime					= 3000
		; InitialSpawnFX						= FX_GildorInitialSpawn
		; RespawnAnim							= LEVELED
		; RespawnFX							= FX_GildorRespawn
		; RespawnAnimationTime				= 2000
		; AutoRespawnAtObjectFilter			= NONE +CASTLE_KEEP
		; ButtonImage							= HIRivGildor_res

		; ;RespawnEntries determine the ruleset for how a character can be revived. Some units may automatically respawn, others
		; ;may require a specific revive action performed on him. You can specify different values for each level... or use Level:Any
; ;;,;;		RespawnRules						= AutoSpawn:No Cost:1500 Time:60000 Health:100%

; ;;,;; Version 2.1 Respawn Rules
		; RespawnRules =			AutoSpawn:No	Cost:880		Time:HERO_RESPAWNTIME_TIER_1		Health:100% ;Cost:1200
		; RespawnEntry =	Level:2				Cost:935		Time:HERO_RESPAWNTIME_TIER_1
		; RespawnEntry =	Level:3				Cost:990		Time:HERO_RESPAWNTIME_TIER_1
		; RespawnEntry =	Level:4				Cost:1045		Time:HERO_RESPAWNTIME_TIER_1
		; RespawnEntry =	Level:5				Cost:1100		Time:HERO_RESPAWNTIME_TIER_1
		; RespawnEntry =	Level:6				Cost:1155		Time:HERO_RESPAWNTIME_TIER_1
		; RespawnEntry =	Level:7				Cost:1210		Time:HERO_RESPAWNTIME_TIER_1
		; RespawnEntry =	Level:8				Cost:1265		Time:HERO_RESPAWNTIME_TIER_1
		; RespawnEntry =	Level:9				Cost:1320		Time:HERO_RESPAWNTIME_TIER_1
		; RespawnEntry =	Level:10			Cost:1375		Time:HERO_RESPAWNTIME_TIER_1
	; End

	; Behavior = EmotionTrackerUpdate	Module_EmotionTracker
		; TauntAndPointDistance				= 200
		; TauntAndPointUpdateDelay			= 10000
		; PointAt								= ANY +HERO
		; AddEmotion			=	Doom_Base
		; //	AddEmotion			=   BraceForBeingCrushed_Base
		; //	AddEmotion			=	FearIdle_Base
		; //	AddEmotion			=	FearBusy_Base
		; AddEmotion			=	Point_Base
		; AddEmotion			=	Taunt_Base
 		; AddEmotion			=	CheerIdle_Base
		; AddEmotion			=	CheerBusy_Base
		; //	AddEmotion			=	HeroCheerIdle_Base
		; //	AddEmotion			=	HeroCheerBusy_Base
		; AddEmotion			=	Alert_Base
		; AddEmotion			=	CheerForAboutToCrush_Base
	; End

	; Behavior = AutoHealBehavior ModuleTag_LegolasHealing
		; StartsActive						= Yes
		; HealingAmount						= HERO_HEAL_AMOUNT
		; HealingDelay						= 1000
		; StartHealingDelay					= HERO_HEAL_DELAY
		; HealOnlyIfNotInCombat				= Yes
	; End

	; Behavior = AutoHealBehavior ModuleTag_ElvenGiftHealing
		; StartsActive				= No
		; TriggeredBy					= Upgrade_ElvenGift
		; HealingAmount				= ELVEN_GIFT_REGEN_AMOUNT
		; HealingDelay				= ELVEN_GIFT_REGEN_DELAY
		; StartHealingDelay = HERO_HEAL_DELAY
		; HealOnlyIfNotInCombat = Yes
	; End
	; Behavior = AttributeModifierUpgrade ModuleTag_ElvenGiftBonus
		; TriggeredBy = Upgrade_ElvenGift
		; AttributeModifier = SpellBookElvenGifts
	; End
	
	; Behavior = StancesBehavior ModuleTag_StancesBehavior
		; StanceTemplate						= Hero
	; End

	; #include "..\..\..\includes\CaptureBuilding.inc"

	; Behavior = AIUpdateInterface ModuleTag_03
		; AutoAcquireEnemiesWhenIdle			= Yes ATTACK_BUILDINGS
		; MoodAttackCheckRate					= 500
		; CanAttackWhileContained				= Yes
		; AILuaEventsList						= LegolasFunctions
	; End

; ;;,;; ;;;	Behavior = AutoAbilityBehavior ModuleTag_HaldirAutoAbility
; ;;,;; ;;;	End

	; LocomotorSet
		; Locomotor							= HumanLocomotor
		; Condition							= SET_NORMAL 
		; Speed								= NORMAL_ELVEN_FAST_MEMBER_SPEED
	; End

	; LocomotorSet
		; Locomotor							= HumanWanderLocomotor
		; Condition							= SET_WANDER
		; Speed								= NORMAL_GOOD_FAST_MEMBER_SPEED
	; End

	; LocomotorSet
		; Locomotor							= HumanPanicLocomotor
		; Condition							= SET_PANIC
		; Speed								= NORMAL_ELVEN_FAST_MEMBER_SPEED
	; End

	; LocomotorSet
		; Locomotor							= HumanScaredLocomotor
		; Condition							= SET_SCARED
		; Speed								= NORMAL_ELVEN_FAST_MEMBER_SPEED
	; End

	; Behavior = PhysicsBehavior ModuleTag_04
		; GravityMult							= 1.0
		; ShockStandingTime					= 2000
	; End
	
	; Behavior = SlowDeathBehavior ModuleTag_05
		; DeathTypes							= ALL -FADED
		; SinkDelay							= 3000
		; SinkRate							= 0.5
		; DestructionDelay					= 15000
		; Sound								= INITIAL GildorVoiceDie
		; DeathFlags							= DEATH_1
	; End

	; Behavior = SlowDeathBehavior ModuleTag_FadeDeath
		; DeathTypes							= NONE +FADED
		; FadeDelay							= 0
		; FadeTime							= 5000
		; DestructionDelay					= 5000
		; DeathFlags							= DEATH_2
		; FX									= INITIAL FX_UnSummonElvenAllies
	; End

	; Behavior = SquishCollide ModuleTag_06
	; End

	; Behavior = BezierProjectileBehavior ModuleTag_08
		; FirstHeight							= 25
		; SecondHeight						= 25
		; FirstPercentIndent					= 30%
		; SecondPercentIndent					= 70%
		; TumbleRandomly						= Yes
		; CrushStyle							= Yes
		; DieOnImpact							= Yes
		; BounceCount							= 1
		; BounceDistance						= 41
		; BounceFirstHeight					= 25
		; BounceSecondHeight					= 25
		; BounceFirstPercentIndent			= 20%
		; BounceSecondPercentIndent			= 80%
		; GroundHitFX							= FX_ThrownRockGroundHit
		; GroundBounceFX						= FX_ThrownRockBounceHit
	; End

	; ;--------------------------------------------------------------------------------------------
	; ;//-------------------------Companion--------------------------------------
	; ;--------------------------------------------------------------------------------------------

	; Behavior = AttributeModifierAuraUpdate ModuleTag_Leadership
		; StartsActive						= No
		; BonusName							= GildorHobbitLeadership
		; TriggeredBy							= Upgrade_ObjectLevel1 ;Upgrade_HaldirLeadership
		; RefreshDelay						= 2000
		; Range								= 200
		; ObjectFilter						= NONE +RivendellHobbit +TookArcher
; ;		ObjectFilter						= AOTR_GENERIC_BUFF_RECIPIENT_OBJECT_FILTER
	; End

	; Behavior = UnpauseSpecialPowerUpgrade ModuleTag_HaldirLeadership
		; SpecialPowerTemplate				= SpecialAbilityFakeLeadership
		; TriggeredBy							= Upgrade_ObjectLevel1 ;Upgrade_HaldirLeadership
	; End

	; Behavior = SpecialPowerModule ModuleTag_HaldirLeadershipUpdate
		; SpecialPowerTemplate				= SpecialAbilityFakeLeadership
		; UpdateModuleStartsAttack			= No
		; StartsPaused						= Yes
	; End
	
	; ;--------------------------------------------------------------------------------------------
	; ;//-------------------------The Wandering Companies--------------------------------------
	; ;--------------------------------------------------------------------------------------------
	
	; Behavior = UnpauseSpecialPowerUpgrade ModuleTag_ExilesLvl3Enabler1
        ; SpecialPowerTemplate = SpecialAbilityGildorExileSummon
        ; TriggeredBy = Upgrade_ObjectLevel3
    ; End
    ; Behavior = OCLSpecialPower ModuleTag_OCLSpecialPowerLvl3
        ; SpecialPowerTemplate    = SpecialAbilityGildorExileSummon
        ; OCL                        = OCL_SpawnExilesLvl3
        ; CreateLocation       = USE_OWNER_OBJECT
        ; StartsPaused            = Yes
        ; SetModelCondition        = ModelConditionState:USER_1
        ; SetModelConditionTime    = 4.1
		; TriggerFX			 = FX_GildorExilesSummon
		; InitiateSound				= GildorVoiceSummon
    ; End
	; Behavior = AutoAbilityBehavior ModuleTag_ExilesLvl3AutoAbility
		; SpecialAbility	= SpecialAbilityGildorExileSummon
		; ForbiddenStatus = INSIDE_GARRISON
		; MaxScanRange	= 300
		; Query		= 30 ANY ENEMIES +INFANTRY +CAVALRY -STRUCTURE -WALL_UPGRADE -WALL_HUB -WALL_SEGMENT -DEFENSIVE_WALL -FS_BASE_DEFENSE
	; End
	
	; Behavior = CommandSetUpgrade ModueTag_CommandSetLvl8
        ; TriggeredBy              = Upgrade_ObjectLevel8
        ; ConflictsWith            = Upgrade_ObjectUnderAIControl
        ; CommandSet               = GildorCommandSetLvl8
    ; End
	
	; Behavior = UnpauseSpecialPowerUpgrade ModuleTag_ExilesLvl8Enabler1
        ; SpecialPowerTemplate = SpecialAbilityGildorExileSummon2
        ; TriggeredBy = Upgrade_ObjectLevel8
    ; End
    ; Behavior = OCLSpecialPower ModuleTag_OCLSpecialPowerLvl8
        ; SpecialPowerTemplate    = SpecialAbilityGildorExileSummon2
        ; OCL                        = OCL_SpawnExilesLvl8
        ; CreateLocation       = USE_OWNER_OBJECT
        ; StartsPaused            = Yes
        ; SetModelCondition        = ModelConditionState:USER_1
        ; SetModelConditionTime    = 4.1
		; TriggerFX			 = FX_GildorExilesSummon
		; InitiateSound				= GildorVoiceSummon
    ; End
	; Behavior = AutoAbilityBehavior ModuleTag_ExilesLvl8AutoAbility
		; SpecialAbility	= SpecialAbilityGildorExileSummon2
		; ForbiddenStatus = INSIDE_GARRISON
		; MaxScanRange	= 300
		; Query		= 30 ANY ENEMIES +INFANTRY +CAVALRY -STRUCTURE -WALL_UPGRADE -WALL_HUB -WALL_SEGMENT -DEFENSIVE_WALL -FS_BASE_DEFENSE
	; End
	
	; ;--------------------------------------------------------------------------------------------
	; ;//-------------------------Light of Telperion--------------------------------------
	; ;--------------------------------------------------------------------------------------------
	
		; Behavior = UnpauseSpecialPowerUpgrade ModuleTag_EnableElendil
		; SpecialPowerTemplate		= SpecialAbilityGildorTelperion
		; TriggeredBy					= Upgrade_ObjectLevel5
	; End
	; Behavior = SpecialPowerModule ModuleTag_ElendilStarter						
		; SpecialPowerTemplate		= SpecialAbilityGildorTelperion
		; UpdateModuleStartsAttack	= Yes
		; AntiCategory			= LEADERSHIP
		; AttributeModifier			= AragornElendilAntiCategory
		; AttributeModifierRange		= 200.0
		; StartsPaused			= Yes
		; ; SetModelCondition			= ModelConditionState:USER_3
		; ; SetModelConditionTime		= 10.0
	; End

	; Behavior = ModelConditionSpecialAbilityUpdate ModuleTag_ElendilUpdate
		; SpecialPowerTemplate    = SpecialAbilityGildorTelperion
		; UnpackTime					= 0
		; ;PackTime					= 10000
		; PreparationTime				= 1000
		; PersistentPrepTime			= 2000
		; PersistentCount				= 5				; 5 * 2000 = 10 secs.
		; UnpackingVariation			= 1
		; GenerateTerror			= Yes
		; EmotionPulseRadius		= 180
		; ObjectFilter			= ELENDIL_OBJECT_FILTER
		; AwardXPForTriggering    = 0
	; End
	; Behavior = AutoAbilityBehavior ModuleTag_ElendilAutoAbility
		; SpecialAbility	= SpecialAbilityGildorTelperion
		; ForbiddenStatus = INSIDE_GARRISON
		; MaxScanRange	= 160
		; Query								= 10 ANY ENEMIES +INFANTRY +CAVALRY -STRUCTURE -WALL_UPGRADE -WALL_HUB -WALL_SEGMENT -DEFENSIVE_WALL -FS_BASE_DEFENSE
	; End
	
	; ;///////////////////
	; ; AISpecialPowers
	; ;///////////////////
	
	; Behavior = AISpecialPowerUpdate GondorFighterHordeStanceBattle
		; CommandButtonName = Command_SetStanceBattle
		; SpecialPowerAIType = AI_SPECIAL_POWER_STANCEBATTLE
	; End

	; Behavior = AISpecialPowerUpdate GondorFighterHordeStanceAggressive ;;,;; Changed for 3.0.1
		; CommandButtonName = Command_AttackMove ;;,;; Command_SetStanceAggressive ;;,;; Changed for 3.0.1
		; SpecialPowerAIType = AI_SPECIAL_POWER_STANCEAGGRESSIVE
	; End

	; Behavior = AISpecialPowerUpdate GondorFighterHordeHoldGround
		; CommandButtonName = Command_SetStanceHoldGround
		; SpecialPowerAIType = AI_SPECIAL_POWER_STANCEHOLDGROUND
	; End

	; Behavior = AISpecialPowerUpdate AragornBladeMasterAI
		; CommandButtonName = Command_SpecialAbilityOrophinBladeMaster
		; SpecialPowerAIType = AI_SPECIAL_POWER_CHARGE
	; End
	; Behavior = AISpecialPowerUpdate AragornElendilAI
		; CommandButtonName = Command_SpecialAbilityGildorTelperion
		; SpecialPowerAIType = AI_SPECIAL_POWER_BASIC_SELF_BUFF
		; SpecialPowerRadius = 2
	; End
	; Behavior = AISpecialPowerUpdate SpecialPowerAragornOathBreakers
		; CommandButtonName = Command_SpecialAbilityGildorExilesLvl3
		; SpecialPowerAIType = AI_SPECIAL_POWER_TARGETAOE_SUMMON
		; SpecialPowerRadius = 30.0
	; End

	; Behavior = AISpecialPowerUpdate SpecialPowerAragornOathBreakers2
		; CommandButtonName = Command_SpecialAbilityGildorExilesLvl8
		; SpecialPowerAIType = AI_SPECIAL_POWER_TARGETAOE_SUMMON
		; SpecialPowerRadius = 30.0
	; End

; ;	
; ;	Behavior = AISpecialPowerUpdate LurtzToggleAI ;;,;; ;;;
; ;		CommandButtonName = Command_ToggleHaldirWeapon
; ;		SpecialPowerAIType = AI_SPECIAL_POWER_TOGGLE_MELEE_AND_RANGE
; ;	End

	; Behavior = GrantUpgradeCreate ModuleTag_GiveUpgrade
		; UpgradeToGrant			= Upgrade_WOTRHero4
	; End	

	; Geometry			= CYLINDER
	; GeometryMajorRadius = 8.0	
	; GeometryHeight		= 19.2
	; GeometryIsSmall		= Yes
	; Shadow				= SHADOW_DECAL
	; ShadowSizeX			= 19;
	; ShadowSizeY			= 19;
	; ShadowTexture		= ShadowI;
; End
