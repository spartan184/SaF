; ;------------------------------------------------------------------------------
; ;
; ;	Elrond.ini
; ;
; ;------------------------------------------------------------------------------

; ; Elrond
; Object ElvenElrond

	; ; *** ART Parameters ***
	; SelectPortrait         = HPrivElrond
	; ButtonImage = HIrivElrond
	
	; DescriptionStrategic = CONTROLBAR:LW_ToolTip_Elrond
	
	; Draw = W3DScriptedModelDraw ModuleTag_DRAW

		; OkToChangeModelColor	= Yes
		; StaticModelLODMode		= Yes

		; DefaultModelConditionState
			; Model							= auelrond_light
			; Skeleton            = RUElfWar_SKL
			; WeaponLaunchBone				= PRIMARY ARROW
		; End
		
		; ModelConditionState = WEAPONSET_HERO_MODE RIDER2
			; Model							= auelrond_ha
			; ParticleSysBone = BAT_RIBS SkilloftheElvesFX FollowBone:Yes
			; ParticleSysBone =  BAT_FARMR QuickshotTrailFX FollowBone:Yes
			; ParticleSysBone =  BAT_FARML QuickshotTrailFX FollowBone:Yes
			; ParticleSysBone =  B_SWORDBONE QuickshotTrailFX FollowBone:Yes
		; End
		
 		; ModelConditionState = WEAPONSET_HERO_MODE
			; Model							= auelrond_light
			; ParticleSysBone = BAT_RIBS SkilloftheElvesFX FollowBone:Yes
			; ParticleSysBone =  BAT_FARMR QuickshotTrailFX FollowBone:Yes
			; ParticleSysBone =  BAT_FARML QuickshotTrailFX FollowBone:Yes
			; ParticleSysBone =  B_SWORDBONE QuickshotTrailFX FollowBone:Yes
		; End
		
		; ModelConditionState			= RIDER2
			; Model               = auelrond_ha
		; End
		
		; ModelConditionState = MOUNTED
			; Model	=	RUHHs_Theo_SKN
			; Skeleton = RUHHs_Theo_SKL
			; WeaponLaunchBone    = PRIMARY PASSENGERBONE
		; End
		; AnimationState			    = MOUNTED DEBUG
			; Animation
				; AnimationName       = RUHHs_Theo_IDLA      
				; AnimationMode       = ONCE
			; End
			; ParticleSysBone = BAT_HHEAD glowHorseGold FollowBone:Yes			
			; ParticleSysBone = B_HHIPL glowHorseRearGold FollowBone:Yes
			; ParticleSysBone = BAT_SPINE2 glowGold FollowBone:Yes			
		; End
		; AnimationState				=	MOUNTED FREEFALL 
			; Animation				=	freefall
				; AnimationName		=	RUHHs_Theo_FLYC
				; AnimationMode		=	LOOP
			; End
			; Flags					=	RANDOMSTART
		; End
		; AnimationState				=	MOUNTED STUNNED_FLAILING 
			; Animation				=	JustDie
				; AnimationName		=	RUHHs_Theo_FLYC
				; AnimationMode		=	LOOP
			; End
			; Flags					=	RANDOMSTART
		; End
		; AnimationState				=	MOUNTED PASSENGER
			; Animation				=	grabbed
				; AnimationName		=	RUHHs_Theo_GBDA
				; AnimationMode		=	LOOP
			; End
			; Flags					=	RANDOMSTART
		; End
		; AnimationState				=	MOUNTED DYING SPLATTED
			; Animation				=	Land
				; AnimationName		=	RUHHs_Theo_LNDA
				; AnimationMode		=	ONCE
				; AnimationBlendTime  =   2
			; End
			; FXEvent	= Frame:2 Name:FX_SplatDust
		; End
		; AnimationState				=	MOUNTED DYING
			; Animation				=	JustDie
				; AnimationName		=	RUHHs_Theo_DIEA
				; AnimationMode		=	ONCE
			; End
		; End
		; AnimationState				=	MOUNTED STUNNED_STANDING_UP
			; Animation				=	StandUp
				; AnimationName		=	RUHHs_Theo_GTPA
				; AnimationMode		=	ONCE
				; AnimationSpeedFactorRange = 3.5 3.5
			; End
		; End
		; AnimationState				=	MOUNTED STUNNED
			; Animation				=	Land
				; AnimationName		=	RUHHs_Theo_LNDA
				; AnimationMode		=	ONCE
			; End
		; End
		; AnimationState						= PARALYZED MOUNTED
			; Animation
				; AnimationName				= RUHHs_Theo_IDLA
				; AnimationMode				= LOOP
			; End
		; End
		; AnimationState        = MOUNTED MOVING FIRING_OR_PREATTACK_A
			; ShareAnimation		= Yes
			; Animation           = RunAndFire
				; AnimationName       = RUHHs_Theo_ATRA
				; AnimationMode       = LOOP
			; End
			; Flags               = RANDOMSTART 
		; End
		; AnimationState				=	MOUNTED MOVING USING_SPECIAL_ABILITY
			; Animation				=	RousingSpeech
				; AnimationName		=	RUHHs_Theo_WLKB
				; AnimationMode		=	LOOP
			; End
		; End
		; AnimationState				=	MOUNTED TURN_LEFT_HIGH_SPEED
			; Animation				=	TurnLeft
				; AnimationName		=	RUHHs_Theo_TNL1
				; AnimationMode		=	LOOP
				; AnimationSpeedFactorRange= 1.2 1.2
				; AnimationBlendTime	=	20
			; End
		; End
		; AnimationState				=	MOUNTED TURN_RIGHT_HIGH_SPEED
			; Animation				=	TurnLeft
				; AnimationName		=	RUHHs_Theo_TNR1
				; AnimationMode		=	LOOP
				; AnimationSpeedFactorRange= 1.2 1.2
				; AnimationBlendTime	=	20
			; End
		; End
		; AnimationState				=	MOUNTED MOVING TURN_LEFT 
			; Animation				=	TurnLeft
				; AnimationName		=	RUHHs_Theo_TRNL
				; AnimationMode		=	LOOP
			; End
		; End
		; AnimationState				=	MOUNTED MOVING TURN_RIGHT 
			; Animation				=	TurnRight
				; AnimationName		=	RUHHs_Theo_TRNR
				; AnimationMode		=	LOOP
			; End
		; End
		; AnimationState				=	MOUNTED MOVING ACCELERATE
			; Animation				=	Accelerate
				; AnimationName		=	RUHHs_Theo_ACCL
				; AnimationMode		=	LOOP
			; End
		; End
		; AnimationState				=	MOUNTED MOVING DECELERATE
			; Animation				=	Decelerate
				; AnimationName		=	RUHHs_Theo_DECL
				; AnimationMode		=	ONCE
				; AnimationSpeedFactorRange = 0.6 0.6
			; End
		; End
		; AnimationState				=	MOUNTED MOVING WALKING
			; Animation				=	Walk
				; AnimationName		=	RUHHs_Theo_WLKA
				; AnimationMode		=	LOOP
			; End
		; End
		; AnimationState				=	MOUNTED MOVING BACKING_UP
			; Animation				=	BackingUp
				; AnimationName		=	RUHHs_Theo_BAKA
				; AnimationMode		=	LOOP
			; End
		; End
		; AnimationState				=	MOUNTED MOVING
			; Animation				=	RunA
				; AnimationName		=	RUHHs_Theo_RUNA
				; AnimationMode		=	LOOP
			; End
		; End
		; AnimationState						=	PACKING_TYPE_2 MOUNTED
			; StateName						=	SPELL
			; Animation						=	SPCC
				; AnimationName				=	RUHHs_Theo_SPCA
				; AnimationMode				=	ONCE
				; AnimationBlendTime	=	20
			; End
		; End
		; AnimationState						=	PACKING_TYPE_1 MOUNTED
			; StateName						=	SPELL
			; Animation						=	SPCC
				; AnimationName				=	RUHHs_Theo_IDLC
				; AnimationSpeedFactorRange	=	0.842 0.842
				; AnimationMode				=	ONCE
			; End		
		; End
		; AnimationState				=	MOUNTED FIRING_OR_PREATTACK_A
			; Animation				=	AttackA
				; AnimationName		=	RUHHs_Theo_ATKA
				; AnimationMode		=	ONCE
				; UseWeaponTiming		=	Yes
			; End
			; Animation				=	AttackB
				; AnimationName		=	RUHHs_Theo_ATKB
				; AnimationMode		=	ONCE
				; UseWeaponTiming		=	Yes
			; End
			; Flags					=	RESTART_ANIM_WHEN_COMPLETE
		; End
		; AnimationState				=	MOUNTED ATTACKING
			; Animation				=	AttackA
				; AnimationName		=	RUHHs_Theo_ATKA
				; AnimationMode		=	MANUAL
			; End
		; End
		; AnimationState				= MOUNTED LEVELED
			; StateName				= Idle
			; Animation				= LevelUp
				; AnimationName		= RUHHs_Theo_IDLC
				; AnimationMode		= ONCE
				; AnimationSpeedFactorRange	=	0.666 0.666
			; End
		; End
		; AnimationState				=	RAISING_FLAG MOUNTED
				; Animation           =	CHRA
					; AnimationName   =	RUHHs_Theo_CHRA
					; AnimationMode   =	LOOP
				; End
		; End
		; AnimationState				=	EMOTION_TAUNTING MOUNTED
				; Animation           =	CHRA
					; AnimationName   =	RUHHs_Theo_CHRA
					; AnimationMode   =	LOOP
				; End
		; End
		; AnimationState				= MOUNTED EMOTION_CELEBRATING
			; Animation				= LevelUp
				; AnimationName		= RUHHs_Theo_IDLC
				; AnimationMode		= LOOP
			; End
		; End
		; AnimationState				=	MOUNTED SELECTED
			; SimilarRestart			=   Yes			
			; StateName				=	AtAttentionIdle
			; Animation				=	ATNB
				; AnimationName		=	RUHHs_Theo_IDLH
				; AnimationMode		=	LOOP
			; End
			; BeginScript
				; Prev = CurDrawablePrevAnimationState()
				; if Prev == "Idle" then CurDrawableSetTransitionAnimState("TRANS_MountedSelect") end
				; if Prev == "AtAttentionIdle" then CurDrawableSetTransitionAnimState("TRANS_MountedSelect") end
			; EndScript
		; End
		; TransitionState				=	TRANS_MountedSelect
			; Animation				=	ATNA
				; AnimationName		=	RUHHs_Theo_ATNA
				; AnimationMode		=	ONCE
			; End
		; End
		; AnimationState			= MOUNTED
			; StateName = Idle
			; Animation	=	IdleA
				; AnimationName		=	RUHHs_Theo_IDLA
				; AnimationPriority	=	20
				; AnimationMode		=	ONCE
				; AnimationBlendTime	=	15
			; End
			; Animation				=	IdleB
				; AnimationName		=	RUHHs_Theo_IDLB
				; AnimationMode		=	ONCE
				; AnimationBlendTime	=	15
			; End
			; Animation				=	IdleC
				; AnimationName		=	RUHHs_Theo_IDLC
				; AnimationMode		=	ONCE
				; AnimationBlendTime	=	15
			; End
			; Flags					=	RESTART_ANIM_WHEN_COMPLETE
		; End

; ;;================== ANIMATIONS =================================================================

		; ; ------ Flying ------- ;
		
		; AnimationState					= PASSENGER
			; StateName				= STATE_Grabbed
			; Animation           		= Sword
				; AnimationName       	= RUElfWar_FLLA
				; AnimationMode       	= LOOP
			; End
		; End
		
		
		; AnimationState					= FREEFALL
			; StateName				= STATE_Falling
			; Animation           		= Sword
				; AnimationName       	= RUElfWar_FLYB
				; AnimationMode       	= LOOP
			; End
		; End
		
		; AnimationState					= FREEFALL
			; StateName				= STATE_Falling
			; Animation           		= Sword
				; AnimationName       	= RUElfWar_FLYB
				; AnimationMode       	= LOOP
			; End
		; End
		
		; AnimationState        				= STUNNED_FLAILING
			; StateName				= STATE_Fly
			; Animation           		= Sword
				; AnimationName       	= RUElfWar_FLYB
				; AnimationMode       	= LOOP
			; End
			; Flags					= MAINTAIN_FRAME_ACROSS_STATES2
		; End

		; AnimationState        				= STUNNED_FLAILING
			; StateName				= STATE_Fly
			; Animation           		= Sword
				; AnimationName       	= RUElfWar_FLYB
				; AnimationMode       	= LOOP
			; End
			; Flags					= MAINTAIN_FRAME_ACROSS_STATES2
		; End
		
		; AnimationState					= DYING BURNINGDEATH
			; Animation           		= Sword1
				; AnimationName       	= RUElfWar_DIESv5
				; AnimationMode       	= ONCE
			; End
			; Animation           		= Sword2
				; AnimationName       	= RUElfWar_DIESV4
				; AnimationMode       	= ONCE
			; End
		; End
		
		; AnimationState					= BURNINGDEATH
			; Animation			= Terror
				; AnimationName		= RUElfWar_RUNN
				; AnimationMode		= LOOP
			; End
		; End

		; AnimationState					= DYING DEATH_1 SPLATTED
			; StateName				= STATE_Dead
			; Animation				= Sword
				; AnimationName			= RUElfWar_LNDB
				; AnimationMode			= ONCE
			; End
		; End
		
		
				; ; ------ Dying ------- ;

		; AnimationState        			= DYING DEATH_1
			; Animation           		= Sword1
				; AnimationName       	= RUElfWar_DIESv5
				; AnimationMode       	= ONCE
			; End
			; Animation           		= Sword2
				; AnimationName       	= RUElfWar_DIESV4
				; AnimationMode       	= ONCE
			; End
			
		; End
		
		; AnimationState        			= DYING DEATH_2
			; Animation				= Alert_1
				; AnimationName			= RUElfWar_IDLST1
				; AnimationMode			= LOOP
			; End
		; End
		
		; AnimationState				= PARALYZED
			; Animation				= Alert_1
				; AnimationName			= RUElfWar_IDLST1
				; AnimationMode			= LOOP
			; End
		; End


		; AnimationState        			= STUNNED_STANDING_UP
			; StateName			= STATE_GetUp
			; Animation           		= Sword
				; AnimationName       	= RUElfWar_GTPSX1
				; AnimationMode       	= ONCE
			; End
			; Flags				= MAINTAIN_FRAME_ACROSS_STATES4
		; End

		; AnimationState        			= STUNNED
			; StateName			= STATE_Land
			; Animation           		= Sword
				; AnimationName       	= RUElfWar_LNDB
				; AnimationMode       	= ONCE
			; End
		; End

				
; ;;======== TERROR

		; AnimationState					= MOVING EMOTION_TERROR
			; StateName				= Moving_Sword
			; Animation			= Terror
				; AnimationName		= RUElfWar_RUNN
				; AnimationMode		= LOOP
			; End
		; End



		; ; ------ Attacking ------- ;
		
		; AnimationState        			= FIRING_OR_PREATTACK_A
			; StateName					= Ready_Sword
			; Animation           		= AttackWithSwordA
				; AnimationName       	= RUElfWar_ATKSV2
				; AnimationMode       	= ONCE
				; UseWeaponTiming			= Yes
			; End
			; Animation           		= AttackWithSwordB
				; AnimationName       	= RUElfWar_ATKS
				; AnimationMode       	= ONCE
				; UseWeaponTiming		= Yes
			; End
			; Animation           		= AttackWithSwordD
				; AnimationName       	= RUElfWar_ATKSV4
				; AnimationMode       	= ONCE
				; UseWeaponTiming		= Yes
			; End
		; End

		
; ;;------------------------- BACKUP --------------------------------------------------------------------


		; AnimationState					= MOVING BACKING_UP
			; StateName				= STATE_BackingUp
			; Animation				= Sword
				; AnimationName			= RUElfWar_BAKS
				; AnimationMode			= LOOP
			; End
			; Flags					= MAINTAIN_FRAME_ACROSS_STATES4
		; End

	
		; ; ------------ Moving ------------- ;

		; AnimationState        				= MOVING ATTACKING
			; StateName				= Moving_Sword
			; SimilarRestart				= Yes
			; Animation           		= run_s
				; AnimationName       	= RUElfWar_RUNS
				; AnimationMode       	= LOOP
			; End
		; End
				
		; AnimationState        				= MOVING ALTERNATE_FORMATION
			; StateName				= Moving_Sword
			; SimilarRestart				= Yes
			; Animation           		= run_s
				; AnimationName       	= RUElfWar_RUNS
				; AnimationMode       	= LOOP
			; End
		; End				
		
		; AnimationState        				= MOVING
			; StateName				= Moving_Sword
			; SimilarRestart				= Yes
			; Animation           		= run_s
				; AnimationName       	= RUElfWar_RUNS
				; AnimationMode       	= LOOP
			; End
		; End

		; AnimationState					= EMOTION_UNCONTROLLABLY_AFRAID
			; StateName				= STATE_Emotion_Sword
			; Animation				= Sword
				; AnimationName			= RUElfWar_FERS
				; AnimationMode			= ONCE
			; End
			; Flags					= MAINTAIN_FRAME_ACROSS_STATES RESTART_ANIM_WHEN_COMPLETE
		; End

		
	
		; ; -------- Alert ------- ;

		; AnimationState					= EMOTION_AFRAID
			; StateName					= STATE_Emotion_Sword
			; Animation				= Sword
				; AnimationName			= RUElfWar_FERS
				; AnimationMode			= ONCE
			; End
			; Flags						= RANDOMSTART
		; End
		
		; AnimationState					= EMOTION_ALERT
			; StateName					= Ready_Sword
			; Animation				= Alert_1
				; AnimationName			= RUElfWar_IDLST1
				; AnimationMode			= LOOP
			; End
			; Flags						= RANDOMSTART
		; End		
		
		; AnimationState					= ALTERNATE_FORMATION
			; StateName					= Ready_Sword
			; Animation				= Alert_1
				; AnimationName			= RUElfWar_IDLST1
				; AnimationMode			= LOOP
			; End
			; Flags						= RANDOMSTART
		; End

		; AnimationState					= ENGAGED
			; StateName					= Ready_Sword
			; Animation				= Alert_1
				; AnimationName			= RUElfWar_IDLST1
				; AnimationMode			= LOOP
			; End
		; End

		; AnimationState					= ATTACKING
			; StateName					= Ready_Sword
			; Animation				= Alert_1
				; AnimationName			= RUElfWar_IDLST1
				; AnimationMode			= LOOP
			; End
		; End
		
	
		
; ;;------------ EMOTIONS ------------------------------------------------------------------
; ;;======= AFRAID


		
; ;;====== CELEBRATING		

		; AnimationState					= EMOTION_CELEBRATING
			; StateName					= STATE_Emotion_Sword
			; Animation					= Sword
				; AnimationName			= RUElfWar_CHRST2
				; AnimationMode			= ONCE
			; End
			; Flags						= MAINTAIN_FRAME_ACROSS_STATES RESTART_ANIM_WHEN_COMPLETE
		; End


; ;;====== TAUNTING

		; AnimationState					= EMOTION_TAUNTING
			; StateName					= STATE_Emotion_Sword
			; Animation					= Sword
				; AnimationName			= RUElfWar_TNTSV1
				; AnimationMode			= ONCE
			; End
			; Animation					= Sword
				; AnimationName			= RUElfWar_CHRST2
				; AnimationMode			= ONCE
			; End
			; Flags						= RESTART_ANIM_WHEN_COMPLETE ;MAINTAIN_FRAME_ACROSS_STATES
		; End


; ;;====== POINTING

		; AnimationState					= EMOTION_POINTING
			; StateName					= STATE_Emotion_Sword
			; Animation					= Sword
				; AnimationName			= RUElfWar_PNTB
				; AnimationMode			= ONCE
			; End
			; Flags						= MAINTAIN_FRAME_ACROSS_STATES RESTART_ANIM_WHEN_COMPLETE
		; End
		
		; AnimationState					= RAISING_FLAG
			; StateName					= STATE_Emotion_Sword
			; Animation					= Sword
				; AnimationName			= RUElfWar_CHRST2
				; AnimationMode			= ONCE
			; End
			; Flags						= RESTART_ANIM_WHEN_COMPLETE
		; End
		; ; ------ Selected ------ ;

		; AnimationState				=	SELECTED
			; StateName				=	STATE_Selected
			; Animation
				; AnimationName		=	RUElfWar_ATNS
				; AnimationMode		=	LOOP
			; End
			; BeginScript
				; Prev = CurDrawablePrevAnimationState()
				; if Prev == "STATE_Idle" then
					; CurDrawableSetTransitionAnimState("TRANS_IdleToSelected")
				; end
			; EndScript
		; End

		
		; ; --------- Hit Reactions ---------- ;
		
; ;		AnimationState						= HIT_REACTION HIT_LEVEL_1
; ;			StateName						= Bored_Sword
; ;			Animation						= Hit_Level_1_a
; ;				AnimationName				= RUElfWar_HITE
; ;				AnimationMode				= ONCE
; ;			End
; ;		End
		
		
		; ; ------- Bored -------- ;
		
		; IdleAnimationState
			; StateName					= STATE_Idle
			; Animation           		= Idle_Sword1
				; AnimationName       	= RUElfWar_IDLG
				; AnimationMode       	= ONCE
			; End
			; Animation           		= Idle_Sword2
				; AnimationName       	= RUElfWar_IDLCT1
				; AnimationMode       	= ONCE
			; End
			; Animation           		= Idle_Sword3
				; AnimationName       	= RUElfWar_IDLCT3
				; AnimationMode       	= ONCE
			; End
			; Animation			= IdleNoFidget
				; AnimationName		= RUElfWar_IDLF
				; AnimationMode		= ONCE
				; AnimationPriority	= 20
			; End
			; Animation			= IdleNoFidget2
				; AnimationName		= RUElfWar_IDLF
				; AnimationMode		= ONCE
				; AnimationPriority	= 0
			; End
			; Flags						= RESTART_ANIM_WHEN_COMPLETE
			; BeginScript
				; Prev = CurDrawablePrevAnimationState()
				; if Prev == "STATE_Selected" then
					; CurDrawableSetTransitionAnimState("TRANS_SelectedToIdle")
				; end
			; EndScript
		; End
		
		; TransitionState = TRANS_IdleToSelected
			; Animation
				; AnimationName     = RUElfWar_ATNA
				; AnimationMode     = ONCE
				; AnimationSpeedFactorRange = 0.8 0.8
			; End
		; End
		; TransitionState = TRANS_SelectedToIdle
			; Flags = START_FRAME_LAST		
			; Animation
				; AnimationName	= RUElfWar_ATNA
				; AnimationMode	= ONCE_BACKWARDS
				; AnimationSpeedFactorRange = 0.8 0.8
			; End
		; End		
		
	; End
	
	; Draw = W3DScriptedModelDraw DustEffects
	    ; DefaultModelConditionState
	      ; Model = None
	    ; End
	    ; IdleAnimationState
	    ; End
	    ; AnimationState = MOUNTED MOVING WADING
			; ParticleSysBone = None FootstepSlash
	    ; End
	    ; AnimationState = MOUNTED MOVING ACCELERATE
			; ParticleSysBone = None GenericSiegeTrailDust
	    ; End
	    ; AnimationState = MOUNTED MOVING ACCELERATE
			; ParticleSysBone = None GenericSiegeTrailDust
	    ; End
	    ; AnimationState = MOUNTED MOVING
			; ParticleSysBone = None GenericSiegeTrailDust
	    ; End
	; End	

    ; #include "..\..\..\includes\StunDrawModuleSmall.inc"

	; ; ***DESIGN parameters ***
	; Side = Rivendell
	; EditorSorting = UNIT
	; ThreatLevel = ELROND_THREAT
	; ThingClass = CHARACTER_UNIT

	; TransportSlotCount = TRANSPORTSLOTCOUNT_HERO
	; WeaponSet
		; Conditions = None
		; Weapon = PRIMARY    ElrondSword
		; AutoChooseSources = PRIMARY FROM_PLAYER FROM_SCRIPT FROM_AI
	; End
	; WeaponSet
		; Conditions		= WEAPONSET_HERO_MODE
		; Weapon			= PRIMARY   ElrondHeroSword
	; End
	; WeaponSet
		; Conditions = MOUNTED
		; Weapon = PRIMARY    TheodenSwordMounted
		; AutoChooseSources = PRIMARY FROM_PLAYER FROM_SCRIPT FROM_AI
	; End	
	; ArmorSet
		; Conditions      = None
		; Armor           = ToughHeroArmor
		; DamageFX        = NormalDamageFX
	; End
	; ArmorSet
		; Conditions      = MOUNTED
		; Armor           = HeroArmorMounted
		; DamageFX        = NormalDamageFX
	; End	
	; VisionRange = VISION_HERO_STANDARD
	; ShroudClearingRange = SHROUD_CLEAR_HERO	
	
	; MaxVisionBonusPercent = 300%
	; VisionBonusTestRadius = 200
	; VisionBonusPercentPerFoot = 1.0%
	; MountedCrusherLevel = 1	
	; BountyValue = 300 ;ELVEN_ELROND_BOUNTY_VALUE
	; RecruitText 					= CONTROLBAR:ElrondRecruit
	; ReviveText					= CONTROLBAR:ElrondRevive
	; Hotkey		= CONTROLBAR:ElvenElrondHotkey
	; DisplayName = OBJECT:ElvenElrond
	; CrushableLevel = 2  ;What am I?:        0 = for infantry, 1 = for trees, 2 = general vehicles
	; MountedCrushableLevel = 2
	; CommandSet = ElrondCommandSet 
	; CommandPoints = 0 ;HERO_COMMAND_POINTS_TIER_4 ;,; HERO_COMMAND_POINTS_TIER_5 ;HERO_COMMAND_POINTS_TIER_4 ;;,;; 50

	; ; *** AUTO RESOLVE DATA *** 
	; AutoResolveUnitType = AutoResolveUnit_Hero
	; AutoResolveCombatChain = AutoResolve_HeroCombatChain

	; AutoResolveBody = AutoResolve_ElrondBody
	
	; AutoResolveArmor
		; Armor = AutoResolve_ElrondArmor
	; End

	; AutoResolveWeapon
		; Weapon = AutoResolve_LeaderHeroStrongWeapon
	; End
	
	; AutoResolveLeadership = AutoResolve_ElrondBonus


	; ; *** AUDIO Parameters ***;

	; VoiceAttack									= ElrondVoiceAttack
	; VoiceAttackCharge							= ElrondVoiceAttackCharge
	; VoiceAttackMachine							= ElrondVoiceAttack
	; VoiceAttackStructure						= ElrondVoiceAttackBuilding
	; VoiceFear 									= ElrondVoiceHelpMe
	; VoiceGuard									= ElrondVoiceMove
	; VoiceMove									= ElrondVoiceMove
	; VoiceMoveToCamp								= ElrondVoiceMoveCamp
	; VoiceMoveWhileAttacking						= ElrondVoiceDisengage
	; VoicePriority								= 78
	; VoiceRetreatToCastle 						= ElrondVoiceRetreat
	; VoiceSelect									= ElrondVoiceSelectMS
	; VoiceSelectBattle 							= ElrondVoiceSelectBattle

	; SoundImpact									= ImpactHorse

	; UnitSpecificSounds
		; VoiceEnterUnitElvenTransportShip		= ElrondVoiceMoveShip
		; VoiceGarrison							= ElrondVoiceMoveGarrison
		; VoiceInitiateCaptureBuilding			= ElrondVoiceCaptureBuilding	; From SpecialPower SpecialAbilityCaptureBuilding
	; End

	; CrowdResponseKey = ElfHero

    ; #include "..\..\..\includes\StandardUnitEvaEvents.inc"
	; EvaEventDieOwner			= ElrondDie		;Eva event to trigger on unit's death. NOTICE THAT this is only for permanent deaths

	; ; Tie into LargeGroupAudio system
	; Behavior = LargeGroupAudioUpdate ModuleTag_LGAU
		; Key = Humanoid_Male Elf_Male Unit Infantry Hero				;Human
		; ;UnitWeight = 2
	; End
	; ClientBehavior = AnimationSoundClientBehavior ModuleTag_AnimAudioBehavior ;;,;; ;;;
		; AnimationSound = Sound:FootstepDirtA			Animation:RUElrond_SKL.RUElrond_RUNS		Frames:3 12
		; AnimationSound = Sound:FootstepDirtA			Animation:EUHaldir_SKL.EUHaldir_RUNB		Frames:3 13	;;,;; ;;;
		; AnimationSound = Sound:FootstepDirtA			Animation:EUHaldir_SKL.EUHaldir_RUNS		Frames:3 12	;;,;; ;;;
		; AnimationSound = Sound:HorseMoveFootsteps		Animation:RUHHs_Theo_SKL.RUHHs_Theo_ACCL	Frames:14 32
		; AnimationSound = Sound:HorseMoveFootsteps		Animation:RUHHs_Theo_SKL.RUHHs_Theo_RUNA	Frames:0
		; AnimationSound = Sound:HorseMoveFootsteps		Animation:RUHHs_Theo_SKL.RUHHs_Theo_TNL1	Frames:0
		; AnimationSound = Sound:HorseMoveFootsteps		Animation:RUHHs_Theo_SKL.RUHHs_Theo_TNR1	Frames:0
		; AnimationSound = Sound:HorseWhinny			Animation:RUHHs_Theo_SKL.RUHHs_Theo_IDLC	Frames:3
		; AnimationSound = Sound:HorseDieForHero		Animation:RUHHs_Theo_SKL.RUHHs_Theo_LNDA	Frames:0
		; AnimationSound = Sound:BodyFallSoldier		Animation:RUHHs_Theo_SKL.RUHHs_Theo_LNDA	Frames:1 9
		; AnimationSound = Sound:HorseDieForHero		Animation:RUHHs_Theo_SKL.RUHHs_Theo_DIEA	Frames:0
		; AnimationSound = Sound:BodyFallGenericNoArmor	Animation:RUHHs_Theo_SKL.RUHHs_Theo_DIEA	Frames:4
		; AnimationSound = Sound:BodyFallSoldier		Animation:RUHHs_Theo_SKL.RUHHs_Theo_DIEA	Frames:42		
	; End
	
	; ; *** ENGINEERING Parameters ***
	; RadarPriority = UNIT
	; KindOf = PRELOAD SELECTABLE CAN_CAST_REFLECTIONS INFANTRY PATH_THROUGH_EACH_OTHER SCORE ARMY_SUMMARY HERO HEAVY_MELEE_HITTER
	; PathfindDiameter = 40.0
	; CamouflageDetectionMultiplier = CAMOUFLAGE_DETECTION_DISTANCE_MEDIUM
	; BuildCost = 4000  ;3500 ;ELROND_BUILDCOST				
	; BuildTime = HERO_BUILDTIME_TIER_5 ;,; HERO_BUILDTIME_TIER_5 ;HERO_BUILDTIME_TIER_4 ;;,;; ELROND_BUILDTIME				
	; ShockwaveResistance = SHOCKWAVE_RESISTANCE_STRONG
	
	; ;//DisplayMeleeDamage = ELROND_DAMAGE
	; Body = RespawnBody ModuleTag_RespawnBody
		; CheerRadius 				= EMOTION_CHEER_RADIUS
		; MaxHealth         			= ELROND_HEALTH ; balance
		; PermanentlyKilledByFilter	= NONE
   		; DodgePercent      			= HERO_DODGE_PERCENT
	; End
	; Behavior = RespawnUpdate ModuleTag_RespawnUpdate
		; DeathAnim					= DYING
		; DeathFX						= FX_ElrondDieToRespawn
		; DeathAnimationTime			= 4000
		; InitialSpawnFX				= FX_ElrondInitialSpawn
		; RespawnAnim					= LEVELED
		; RespawnFX					= FX_ElrondRespawn
		; RespawnAnimationTime		= 2000
		; AutoRespawnAtObjectFilter	= NONE +CASTLE_KEEP
		; ButtonImage					= HIRivElrond_res
		
		; ;RespawnEntries determine the ruleset for how a character can be revived. Some units may automatically respawn, others
		; ;may require a specific revive action performed on him. You can specify different values for each level... or use Level:Any
; ;;,;;		RespawnRules =	AutoSpawn:No	Cost:1875  Time:60000	Health:100%

		; ;RespawnRules =			AutoSpawn:No	Cost:1875		Time:HERO_RESPAWNTIME_TIER_4		Health:100%		;DEFAULT VALUES	;;,;; Version 2.1 Respawn Rules
; ;,;		RespawnRules =			AutoSpawn:No	Cost:2250		Time:HERO_RESPAWNTIME_TIER_5		Health:100%		;DEFAULT VALUES	;;,;; Version 3.0.0 Respawn Rules
        ; RespawnRules =			AutoSpawn:No	Cost:3200		Time:HERO_RESPAWNTIME_TIER_5		Health:100% ;Cost:1200
		; RespawnEntry =	Level:2				Cost:3400		Time:HERO_RESPAWNTIME_TIER_5
		; RespawnEntry =	Level:3				Cost:3600		Time:HERO_RESPAWNTIME_TIER_5
		; RespawnEntry =	Level:4				Cost:3800		Time:HERO_RESPAWNTIME_TIER_5
		; RespawnEntry =	Level:5				Cost:4000		Time:HERO_RESPAWNTIME_TIER_5
		; RespawnEntry =	Level:6				Cost:4200		Time:HERO_RESPAWNTIME_TIER_5
		; RespawnEntry =	Level:7				Cost:4400		Time:HERO_RESPAWNTIME_TIER_5
		; RespawnEntry =	Level:8				Cost:4600		Time:HERO_RESPAWNTIME_TIER_5
		; RespawnEntry =	Level:9				Cost:4800		Time:HERO_RESPAWNTIME_TIER_5
		; RespawnEntry =	Level:10			Cost:5000		Time:HERO_RESPAWNTIME_TIER_5
	; End

	; #include "..\..\..\includes\DefaultInvisibilityUpdate.inc"
	
	; Behavior = StancesBehavior ModuleTag_StancesBehavior
        ; StanceTemplate = Hero
    ; End
    
; ;;,;;     
; ;    ; Elven Grace ---------------------------------------------------------------------------------------------------------------------
; ;   // used by Elven Grace to heal nearby units
; ;	Behavior = AutoHealBehavior ModuleTag_ElvenGraceHealing
; ;		StartsActive				= No
; ;		ButtonTriggered				= Yes										; But doesn't actually run on its own.
; ;		HealingAmount				= ATHELAS_HEAL_AMOUNT ;;,;; 2000 ;;.;; ATHELAS_HEAL_AMOUNT
; ;		Radius						= 200
; ;		UnitHealPulseFX				= FX_AragornAthelas
; ;		KindOf						= HERO
; ;		HealingDelay				= 200
; ;		SingleBurst					= Yes
; ;	End
; ;  	Behavior = SpecialPowerModule ModuleTag_ElrondElvenGrace
; ;		SpecialPowerTemplate		= SpecialAbilityElrondElvenGrace
; ;		AttributeModifierAffects	= NONE +HERO ALLIES
; ;		AffectAllies				= Yes
; ;		UpdateModuleStartsAttack	= Yes
; ;	End
; ;	Behavior = SpecialAbilityUpdate ModuleTag_ElrondElvenGraceUpdate
; ;		SpecialPowerTemplate		= SpecialAbilityElrondElvenGrace
; ;		UnpackTime					= 1
; ;		PackTime					= 3000
; ;	End
; ;   Behavior = AutoAbilityBehavior ModuleTag_ElrondElvenGraceAutoAbility
; ;		SpecialAbility				= SpecialAbilityElrondElvenGrace
; ;		MaxScanRange				= 200
; ;		Query						= 2 NONE +HERO ALLIES
; ;    End
; ;;,;;

    ; ; --------- ELVEN GRACE aka ATHELAS - 2.02e ----------------------------------------------------------------- ;;,;; T.C.
  ; Behavior = SpecialPowerModule ModuleTag_ElrondElvenGrace
		; SpecialPowerTemplate		= SpecialAbility202ElrondElvenGrace
		; UpdateModuleStartsAttack	= Yes
	; End
	; Behavior = ActivateModuleSpecialPower ModuleTag_ElrondElvenGraceMover
		; SpecialPowerTemplate		= SpecialAbility202ElrondElvenGrace
		; StartAbilityRange		= 1.6
		; TriggerSpecialPower		= ModuleTag_ElrondElvenGraceHeal OBJECTPOS
	; End
  ; Behavior = PlayerHealSpecialPower ModuleTag_ElrondElvenGraceHeal
		; SpecialPowerTemplate		= SpecialAbilityActivateeDummy
		; HealAmount			= ATHELAS_HEAL_AMOUNT
		; HealAsPercent			= No
		; HealAffects			= HERO INFANTRY CAVALRY ;;,;; Added INFANTRY, CAVALRY
		; HealRadius			= 200 ;,; 115 ;;,;; 200
		; HealFX				= FX_AragornAthelas
		; ;InitiateSound			= DainMightyRage
		; TriggerFX			= FX_AragornAthelas
	; End
; ;  Behavior = AutoAbilityBehavior ModuleTag_ElrondElvenGraceAutoAbility
; ;		SpecialAbility			= SpecialAbility202ElrondElvenGrace
; ;		ForbiddenStatus = INSIDE_GARRISON ;;,;; This seems to prevent the ability from being used inside a tower
; ;		MaxScanRange			= 115 ;;,;; 200
; ;		Query				= 2 NONE +INFANTRY ;1 NONE +HERO ALLIES ;;,;; 2 NONE +HERO ALLIES
; ;  End

    ; ; Leadership ---------------------------------------------------------------------------------------------------------------------
	; Behavior = UnpauseSpecialPowerUpgrade ModuleTag_TheodenLeadership
		; SpecialPowerTemplate = SpecialAbilityFakeLeadership
		; TriggeredBy = Upgrade_ObjectLevel1 ;Upgrade_ElrondLeadership
	; End

	; Behavior = SpecialPowerModule ModuleTag_TheodenLeadershipUpdate   
		; SpecialPowerTemplate      = SpecialAbilityFakeLeadership
		; UpdateModuleStartsAttack  = No
		; StartsPaused = Yes
	; End	
	; Behavior = AttributeModifierAuraUpdate ModuleTag_Leadership
		; StartsActive			= No
		; BonusName				= ElrondLeadership
		; TriggeredBy				= Upgrade_ObjectLevel1 ;Upgrade_ElrondLeadership
		; RefreshDelay			= 2000
		; Range					= 200
; ;;,;;		AntiCategory			= BUFF
		; ObjectFilter			= NONE +ElvenRivendellInfArcher +ElvenRivendellInfGlaivemen +ElvenRivendellInf +ElvenRivendellKnight +ElvenRivendellBanner
	; End
	
    ; ; Skill of the Elves ---------------------------------------------------------------------------------------------------------------
		; Behavior = UnpauseSpecialPowerUpgrade ModuleTag_AragornBladeMasterEnabler
		; SpecialPowerTemplate = 	HeraldOfGilGalad
		; TriggeredBy = Upgrade_ObjectLevel3
	; End
  	; Behavior = SpecialPowerModule ModuleTag_AragornBladeMasterStarter
		; SpecialPowerTemplate    = HeraldOfGilGalad
		; StartsPaused			= Yes
		; SetModelCondition		= ModelConditionState:USER_4 ;WAR_CHANT
		; SetModelConditionTime		= 1.9
		; DisableDuringAnimDuration	= Yes
	; End
	; Behavior = HeroModeSpecialAbilityUpdate ModuleTag_AragornBladeMasterUpdate
		; SpecialPowerTemplate    = HeraldOfGilGalad
		; ;HeroAttributeModifier	= AragornBladeMaster
		; HeroEffectDuration		= 30000
		; UnpackTime              = 1
		; TriggerSound			= ElrondSkilloftheElves
	; End
	; Behavior = AutoAbilityBehavior ModuleTag_BladeOfPurityAutoAbility
		; SpecialAbility				= HeraldOfGilGalad
		; ForbiddenStatus = INSIDE_GARRISON
		; MaxScanRange				= 200
		; Query						= 1 ALL ENEMIES -WALL_UPGRADE -WALL_HUB -WALL_SEGMENT -DEFENSIVE_WALL
	; End

	; ; Farsight ---------------------------------------------------------------------------------------------------------------------
	; Behavior = UnpauseSpecialPowerUpgrade ModuleTag_FarsightUnpause
		; SpecialPowerTemplate	= SpecialAbilityElrondFarsight
		; TriggeredBy				= Upgrade_ObjectLevel2 ;Upgrade_ElrondFarsight
	; End
	; Behavior = OCLSpecialPower ModuleTag_FarsightOCL
		; StartsPaused			= Yes
		; SpecialPowerTemplate	= SpecialAbilityElrondFarsight
		; OCL						= OCL_SpecialPowerFarSeeing
		; CreateLocation			= CREATE_AT_LOCATION
	; End
	; Behavior = AutoAbilityBehavior ModuleTag_ElrondFarsightAutoAbility ;;,;;
		; SpecialAbility			= SpecialAbilityElrondFarsight
		; ForbiddenStatus = INSIDE_GARRISON ;;,;; This seems to prevent the ability from being used inside a tower
    ; End
	
	; ; Herald of Gil-Galad (Heavy Armor) ---------------------------------------------------------------------------------------------------------------------
	
	; Behavior = UnpauseSpecialPowerUpgrade ModuleTag_TheodenLeadership2
		; SpecialPowerTemplate = SpecialAbilityFakeLeadership2
		; TriggeredBy = Upgrade_ObjectLevel6
	; End
	; Behavior = SpecialPowerModule ModuleTag_TheodenLeadershipUpdate2   
		; SpecialPowerTemplate      = SpecialAbilityFakeLeadership2
		; UpdateModuleStartsAttack  = No
		; StartsPaused = Yes
	; End	
	
	; Behavior = ModelConditionUpgrade ModuleTag_MakeUsBigElrond
		; TriggeredBy			= Upgrade_ObjectLevel6 ;Upgrade_BoromirForGondorSpeech
		; AddConditionFlags	= RIDER2
		; Permanent			= Yes
	; End
	
	; Behavior = AttributeModifierUpgrade ModuleTag_HeavyArmorBonus
		; TriggeredBy = Upgrade_ObjectLevel6
		; AttributeModifier = ElrondHeavyArmor
	; End

	; ; The Last Homely House (Restoration) ---------------------------------------------------------------------------------------------------------------------
	; Behavior = UnpauseSpecialPowerUpgrade ModuleTag_RestorationUnpause
		; SpecialPowerTemplate		= SpecialAbilityElrondRestoration
		; TriggeredBy					= Upgrade_ObjectLevel10 ;Upgrade_ElrondRestoration
	; End
	; Behavior = SpecialPowerTimerRefreshSpecialPower ModuleTag_RestorationRefresh
		; SpecialPowerTemplate		= SpecialAbilityElrondRestoration
		; StartsPaused				= Yes
		; UpdateModuleStartsAttack	= No
		; AffectAllies				= Yes
		; AttributeModifierRange		= 150
; ;;.;;		AttributeModifierAffects	= ALL -ElvenElrond ALLIES
		; AttributeModifierAffects	= ALL -MordorShelob_Summon -MordorShelobNew -ElvenElrond -DwarvenKingDain -DwarvenThorin -MordorMouthOfSauron -MordorSauron -WildSmaug -RingHeroFrodo -MordorSauron -MordorSauron_RingHero -ElvenGaladriel -ElvenGaladriel_RingHero -HaradZigur -HaradZigur_RingHero ALLIES ;;.;; -MordorSauron_RingHero -ElvenGaladriel -ElvenGaladriel_RingHero 
		; SetModelCondition			= ModelConditionState:USER_1
		; SetModelConditionTime		= 3.66
		; ;InitiateSound			    = ElrondVoiceLastHomelyHouse
	; End
  	; Behavior = PlayerHealSpecialPower ModuleTag_RestorationHeal
		; SpecialPowerTemplate		= SpecialAbilityElrondRestorationHeal
		; HealAffects					= INFANTRY CAVALRY MONSTER
		; HealAmount					= 0.2 ; percent of max health
		; HealRadius					= 150
		; HealFX						= FX_ElrondHealSpecialPower
	; End
	; Behavior = AutoAbilityBehavior ModuleTag_ElrondRestorationAutoAbility ;;,;;
		; SpecialAbility			= SpecialAbilityElrondRestoration
		; ForbiddenStatus = INSIDE_GARRISON ;;,;; This seems to prevent the ability from being used inside a tower
		; MaxScanRange			= 300
		; Query			= 2 ANY ALLIES +HORDE
		; Query			= 1 NONE +HERO ALLIES
    ; End
	
 	; Behavior = SpecialPowerModule ModuleTag_HorseToggleStarter                      
 		; SpecialPowerTemplate      = SpecialAbilityToggleMounted
 		; UpdateModuleStartsAttack  = Yes
 		; StartsPaused = No
 	; End
	; Behavior = ToggleMountedSpecialAbilityUpdate ModuleTag_HorseToggle
 		; SpecialPowerTemplate    = SpecialAbilityToggleMounted
 		; TriggerInstantlyOnCreate = No
 		; UnpackTime              = 2000
 		; PreparationTime         = 1  
 		; PersistentPrepTime      = 250
 		; PackTime                = 2000
 		; OpacityTarget			= .3
 		; AwardXPForTriggering    = 0
	; End

	; ; Ring of Air ---------------------------------------------------------------------------------------------------------------------
	; Behavior = UnpauseSpecialPowerUpgrade ModuleTag_RingOfAirEnabler
		; SpecialPowerTemplate	= ElrondRingOfAir
		; TriggeredBy				= Upgrade_ObjectLevel8
	; End
	; Behavior = OCLSpecialPower		ModuleTag_RingOfAir
		; SpecialPowerTemplate		= ElrondRingOfAir
		; TriggerFX					= FX_ElrondRingOfAir
		; OCL							= OCL_ElrondRingOfAir
		; CreateLocation				= CREATE_AT_LOCATION
		; UpdateModuleStartsAttack	= No
		; ;AvailableAtStart			= No
		; StartsPaused				= Yes
		; ; SetModelCondition		= ModelConditionState:RIDER1
		; ; SetModelConditionTime		= 8.1
		; ; DisableDuringAnimDuration	= Yes
	; End	
	; Behavior = AutoAbilityBehavior ModuleTag_RingofAirAutoAbility
		; SpecialAbility	= ElrondRingOfAir
		; ForbiddenStatus = INSIDE_GARRISON
		; MaxScanRange	= 200
		; Query		= 15 ANY +CAVALRY +INFANTRY -STRUCTURE -CASTLE_KEEP -BASE_FOUNDATION -MOVE_ONLY -DOZER -SUMMONED ALLIES
	; End
; ;----------------------------------------------
	; Behavior = AutoHealBehavior ModuleTag_ElrondHealing
		; StartsActive = Yes
		; HealingAmount = HERO_HEAL_AMOUNT
		; HealingDelay = 1000
		; StartHealingDelay = HERO_HEAL_DELAY
		; HealOnlyIfNotInCombat = Yes
	; End
	
	; #include "..\..\..\includes\CaptureBuilding.inc"
	
	; ;// AKA Whirlwind
	; Behavior = UnpauseSpecialPowerUpgrade ModulTag_ElrondTornadoEnabler
		; SpecialPowerTemplate	= SpecialPowerSpawnTornado
		; TriggeredBy				= Upgrade_ObjectLevel7 ;Upgrade_ElrondTornado
	; End
	; Behavior = OCLSpecialPower	ModuleTag_OCLSpawnTornado
		; SpecialPowerTemplate	= SpecialPowerSpawnTornado
		; OCL						= SUPERWEAPON_SpawnWhirlwind
		; CreateLocation			= CREATE_AT_LOCATION
		; StartsPaused			= Yes
	; End
	; Behavior = AutoAbilityBehavior ModuleTag_AotDAutoAbility ;;,;;
		; SpecialAbility	= SpecialPowerSpawnTornado
		; ForbiddenStatus = INSIDE_GARRISON ;;,;; This seems to prevent the ability from being used inside a tower
		; MaxScanRange	= 400
		; Query								= 30 ANY ENEMIES +INFANTRY +CAVALRY -STRUCTURE -WALL_UPGRADE -WALL_HUB -WALL_SEGMENT -DEFENSIVE_WALL -FS_BASE_DEFENSE
	; End

	; Behavior = AIUpdateInterface ModuleTag_03
		; AutoAcquireEnemiesWhenIdle = Yes ATTACK_BUILDINGS
		; MoodAttackCheckRate        = 500
; ;		CanAttackWhileContained	   = Yes ;;.;; Removed
		; AILuaEventsList			   = HeroScriptFunctions
	; End

	; Behavior = EmotionTrackerUpdate	Module_EmotionTracker
		; TauntAndPointDistance		=	250		; max distance to taunted/pointed objet
 		; TauntAndPointUpdateDelay	=	1000	; how often scan (milliseconds)
 		
		; AddEmotion			=	Doom_Base
		; //	AddEmotion			=   BraceForBeingCrushed_Base
		; //	AddEmotion			=	FearIdle_Base
		; //	AddEmotion			=	FearBusy_Base
		; AddEmotion			=	Point_Base
		; AddEmotion			=	Taunt_Base
 		; AddEmotion			=	CheerIdle_Base
		; AddEmotion			=	CheerBusy_Base
		; //	AddEmotion			=	HeroCheerIdle_Base
		; //	AddEmotion			=	HeroCheerBusy_Base
		; AddEmotion			=	Alert_Base
		; AddEmotion			=	CheerForAboutToCrush_Base
 	; End

	; LocomotorSet
		; Locomotor = IsildurHumanLocomotor
		; Condition = SET_NORMAL 
		; Speed     = NORMAL_ELVEN_FAST_MEMBER_SPEED
	; End

	; LocomotorSet
		; Locomotor = HeroHorseLocomotor
		; Condition = SET_MOUNTED
		; Speed     = NORMAL_MOUNTED_MED_HORDE_SPEED
	; End	
	
	; Behavior = PhysicsBehavior ModuleTag_04
		; GravityMult			= 1.0
		; ShockStandingTime	= 3000
		; ShockStunnedTimeLow	= 1000
		; ShockStunnedTimeHigh= 1200
	; End
	
	; Behavior = SlowDeathBehavior ModuleTag_05
		; DeathTypes = ALL 
		; SinkDelay = 4300
		; SinkRate = 3.0     ; in Dist/Sec
		; DestructionDelay = 8000
		; Sound = INITIAL	ElrondVoiceDie
        ; DeathFlags = DEATH_1
	; End
	
	; Behavior = SquishCollide ModuleTag_06
		; ;nothing
	; End
	
	; Behavior = HitReactionBehavior HitReactionBehaviorModuleTag
		; HitReactionLifeTimer1 = 7 ; level 1 (light  damage)  hit reaction animations in frames (5 per sec)
		; HitReactionLifeTimer2 = 15 ; level 2 (medium damage)  hit reaction animations in frames (5 per sec)
		; HitReactionLifeTimer3 = 10 ; level 3 (heavy  damage)  hit reaction animations in frames (5 per sec)

		; HitReactionThreshold1 = 0.0   ; level 1 (light  damage) threshold trigger
		; HitReactionThreshold2 = 25.0  ; level 2 (medium damage) threshold trigger
		; HitReactionThreshold3 = 50.0  ; level 3 (heavy  damage) threshold trigger
	; End
	
	; ;Behavior = AutoHealBehavior ModuleTag_ElvenGiftHealing
	; ;	StartsActive				= No
	; ;	TriggeredBy					= Upgrade_ArmorofOld
	; ;	HealingAmount				= ELVEN_GIFT_REGEN_AMOUNT
	; ;	HealingDelay				= ELVEN_GIFT_REGEN_DELAY
	; ;	StartHealingDelay = HERO_HEAL_DELAY
	; ;	HealOnlyIfNotInCombat = Yes
	; ;End
	
	; ;Behavior = AttributeModifierUpgrade ModuleTag_ElvenGiftBonus
	; ;	TriggeredBy = Upgrade_ArmorofOld
	; ;	AttributeModifier = SpellBookArmorofOld
	; ;End
	
	; ;Behavior = ExperienceLevelCreate ModuleTag_LevelBonus
	; ;	LevelToGrant	= 5
	; ;	MPOnly			= Yes
	; ;End
	
	; ;///////////////////
	; ; AISpecialPowers
	; ;///////////////////
	
	; Behavior = AISpecialPowerUpdate GondorFighterHordeStanceBattle
		; CommandButtonName = Command_SetStanceBattle
		; SpecialPowerAIType = AI_SPECIAL_POWER_STANCEBATTLE
	; End

	; Behavior = AISpecialPowerUpdate GondorFighterHordeStanceAggressive ;;,;; Changed for 3.0.1
		; CommandButtonName = Command_AttackMove ;;,;; Command_SetStanceAggressive ;;,;; Changed for 3.0.1
		; SpecialPowerAIType = AI_SPECIAL_POWER_STANCEAGGRESSIVE
	; End

	; Behavior = AISpecialPowerUpdate GondorFighterHordeHoldGround
		; CommandButtonName = Command_SetStanceHoldGround
		; SpecialPowerAIType = AI_SPECIAL_POWER_STANCEHOLDGROUND
	; End


	; Behavior = AISpecialPowerUpdate AthelasAI
		; CommandButtonName = Command_HeraldOfGilGalad ;;,;; Command_SpecialAbilityElrondElvenGrace
		; SpecialPowerAIType = AI_SPECIAL_POWER_BASIC_SELF_BUFF
		; SpecialPowerRadius = 2
	; End
	
	; Behavior = AISpecialPowerUpdate FarsightAI
		; CommandButtonName = Command_ElrondRingOfAir
		; SpecialPowerAIType = AI_SPELLBOOK_ASSIST_BATTLE_BUFF
		; SpecialPowerRadius = 100
	; End
	
	; Behavior = AISpecialPowerUpdate WhirlwindAI
		; CommandButtonName = Command_SpecialPowerSpawnWhirlwind
		; SpecialPowerAIType = AI_SPECIAL_POWER_TARGETAOE_SUMMON
		; SpecialPowerRadius = 30.0
	; End
	
	; Behavior = AISpecialPowerUpdate RestorationAI
		; CommandButtonName = Command_SpecialAbilityElrondEarendilion
		; SpecialPowerAIType = AI_SPECIAL_POWER_SELFAOEHEALHEROS
	; End
	
	; Behavior = GrantUpgradeCreate ModuleTag_GiveUpgrade
		; UpgradeToGrant			= Upgrade_WOTRHero10
	; End		
	
	; Scale = 1.13

	; Geometry = CYLINDER
	; GeometryMajorRadius = 8.0
	; GeometryMinorRadius = 8.0
	; GeometryHeight = 19.2
	; GeometryIsSmall = Yes
	; Shadow = SHADOW_DECAL
	; ShadowSizeX = 20;
	; ShadowSizeY = 20;
	; ShadowTexture = ShadowI;
; End

; ;------------------------------------------------------------------------------
; Object RingofAirPing

	; EvaEnemyObjectSightedEvent = None  ; Not a real unit

	; ; ***DESIGN parameters ***
	; VisionRange     = 0.0
	; EditorSorting   = SYSTEM
	; KindOf			= NO_COLLIDE IMMOBILE UNATTACKABLE IGNORE_FOR_VICTORY IGNORE_FOR_EVA_SPEECH_POSITION MOVE_ONLY
	; ThreatLevel		= 0
	
	; SoundAmbient 			= ElrondRingAmbientWind
	
	; ; *** ENGINEERING Parameters ***
	; Body = ActiveBody ModuleTag_01
		; MaxHealth		= 999999
		; InitialHealth	= 999999
	; End

	; Behavior = LifetimeUpdate ModuleTag_LifetimeUpdate
		; MinLifetime		= 30000								; 60 seconds
		; MaxLifetime		= 30000
	; End	
	
	; Behavior = AttributeModifierAuraUpdate ModuleTag_ElvenGroveOne
		; StartsActive		= Yes											; If no, requires upgrade to turn on.
		; BonusName			= RingofAirBuff
		; RefreshDelay		= 2000
		; Range				= 200 ;SPELLBOOK_TAINT_RADIUS
		; TargetEnemy			= No
		; ObjectFilter		= AOTR_GENERIC_BUFF_RECIPIENT_OBJECT_FILTER
		; ;RunWhileDead		= Yes
		; ;RequiredConditions	= ELVEN_WOOD									; In case elven wood and taint overlap, this flag makes it double check the cell type of the target
	; End
	
	; Behavior = AttributeModifierAuraUpdate ModuleTag_ElvenGroveTwo ;;,;; Added for 2.4
		; StartsActive		= Yes											; If no, requires upgrade to turn on.
		; BonusName			= ElvenStatuePassiveLeadershipResistFear
		; RefreshDelay		= 2000
		; Range				= 200 ;SPELLBOOK_TAINT_RADIUS
		; TargetEnemy			= No
		; ObjectFilter		= AOTR_GENERIC_BUFF_RECIPIENT_OBJECT_FILTER
		; ;RunWhileDead		= Yes
		; ;RequiredConditions	= ELVEN_WOOD									; In case elven wood and taint overlap, this flag makes it double check the cell type of the target
	; End	

	; Behavior = InvisibilityUpdate ModuleTag_BroadcastCamouflage
		; InvisibilityNugget
			; InvisibilityType	= CAMOUFLAGE
			; DetectionRange		= ELVEN_MIST_CAMOUFLAGE_DETECTION_RANGE
		; End
		; UpdatePeriod			= 1000
		; Broadcast				= Yes
		; BroadcastRange			= ENSHROUDING_MIST_EFFECT_RADIUS
		; BroadcastObjectFilter	= ELVEN_MIST_OBJECT_FILTER
		; StartsActive			= Yes
	; End
	
	; Behavior = AttributeModifierAuraUpdate ModuleTag_DreadVisage
		; StartsActive	= Yes
		; BonusName		= GenericDebuff
		; RefreshDelay	= 2000
		; Range			= 200
		; TargetEnemy		= Yes
		; AntiCategory	= LEADERSHIP ;;,;; removed BUFF ; This means cancel all previous leadership bonuses
		; ObjectFilter	= AOTR_GENERIC_BUFF_RECIPIENT_OBJECT_FILTER
	; End
	
; End

; ChildObject ElvenElrond_WOTR ElvenElrond
	; Behavior = ExperienceLevelCreate ModuleTag_LevelBonus
		; LevelToGrant	= 1
		; MPOnly			= Yes
	; End
; End	